def rakefile_added?
  git.added_files.include?('Rakefile')
end

def ignore_list
  %w(
    .
    ..
    .circleci
    .git
    bin
    docs
    exceptions
  )
end

def directories
  @directories ||= Dir.entries('.')
    .select { |e| File.directory?(e) }
    .reject { |e| ignore_list.include?(e) }
end

def modified_program_sets
  @modified_program_sets ||= git.modified_files
    .concat(git.added_files)
    .map { |file| file.split('/')[0] }
    .reject { |file| ignore_list.include?(file) }
    .uniq
end

def multiple_program_sets?
  modified_program_sets.count > 1
end

def program_set
  return 'na' if not_applicable_pr_title?

  @program_set ||=
    directories.find { |dir| github.pr_title.include?("[#{dir}]") }.to_s
end

def commit_subject
  @commit_subject ||= `git log --pretty=format:%s --reverse -1`
end

def commit_body
  @commit_body ||= `git log --pretty=format:%b --reverse -1`
end

def not_applicable_pr_title?
  github.pr_title.start_with?('[na]')
end

def not_applicable_branch_name?
  branch_name.include?('/na/')
end

def not_applicable_subject?
  commit_subject.include?('[na]')
end

def not_applicable_body?
  commit_body.include?('[na]')
end

def valid_commit_message?
  if merge_branch?
    return true if not_applicable_subject? || not_applicable_body?

    commit_subject.include?(program_set) || commit_body.include?(program_set)
  else
    return true if not_applicable_subject?

    commit_subject.include?(program_set)
  end
end

def merge_branch?
  @merge_branch ||= commit_subject.start_with?('Merge')
end

def branch_name
  @branch_name ||= github.branch_for_head
end

def branch_contains_program_set?
  return true if not_applicable_branch_name?

  directories.select { |directory| branch_name.include?(directory) }.any?
end

def branch_contains_feature?
  branch_name.start_with?('feature')
end

def strip_doc(doc)
  doc.strip.tr("\n", ' ')
end

fail('Unknown program-set. Are the branch and PR named correctly?') if program_set.empty?

unless branch_contains_program_set? && branch_contains_feature?
  invalid_branch_name_message = <<~MESSAGE
    'feature' and/or 'program-set-key' are not in the branch name. Unfortunately,
    you'll need to rename your branch then create a new pull request.
    Here's an example: `feature/2020-foo-bar/update-uoms`
  MESSAGE

  fail(strip_doc(invalid_branch_name_message))
end

unless github.pr_title.include?(program_set)
  invalid_pr_title_message = <<~MESSAGE
    Please include the program-set in your Pull Request title.
    Here's an example: `[incent-config-foo-bar] Add UOMs`. Or if this does not
    relate to a specific program-set: `[na] Update .gitignore`.
  MESSAGE

  fail(strip_doc(invalid_pr_title_message))
end

unless valid_commit_message?
  validation = merge_branch? ? 'title or body' : 'title'

  invalid_commit_message = <<~MESSAGE
    Please include the program-set in your commit #{validation}.
    Here's an example: `[incent-config-foo-bar] Add UOMs`. Or if this does not
    relate to a specific program-set: `[na] Update .gitignore`.
  MESSAGE

  fail(strip_doc(invalid_commit_message))
end

fail('Please only modify one program-set at a time') if multiple_program_sets?

fail('Please do not add Rakefiles to config repos') if rakefile_added?
